@page
@model BirdCageShop.Pages.Admin.MUser.IndexModel
@addTagHelper *, LazZiya.TagHelpers

@{
    ViewData["Title"] = "Index";
    Layout = "_AdminLayout";
}

<!doctype html>
<html lang="en">

<head>
    <title>Product List</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <link href='https://fonts.googleapis.com/css?family=Roboto:400,100,300,700' rel='stylesheet' type='text/css'>

    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">

    <link rel="stylesheet" href="~/table-07/css/style.css">
    <style>
        html {
            overflow-x: auto; /* Enable horizontal scrolling for the entire page */
        }
        .search-container {
            display: flex;
            align-items: center;
        }

        .search-input {
            width: 500px; /* Set the desired width */
            padding: 8px;
            border: 2px solid #ccc;
            border-radius: 4px;
            margin-right: 8px;
        }

        .search-button {
            padding: 8px 12px;
            background-color: pink;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

        table {
            width: 100%;
            max-width: 100%;
            margin-bottom: 1rem;
            background-color: transparent;
            border-collapse: collapse;
        }

        .search-button:hover {
            background-color: #45a049;
        }
        .table-container {
                    overflow-x: auto; /* Enable horizontal scrolling for the table container */
        margin: 20px 0; /* Add some margin for better aesthetics */
        }
        
    </style>
</head>

<body>
    <div class="row justify-content-center">
        <div class="col-md-6 text-center">
            <h1 style="font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; color: pink; text-align: center; text-transform: uppercase; letter-spacing: 2px; margin-bottom: 20px;">User List</h1>
        </div>
    </div>
    

    <div class="ml-auto search-container">
        <form method="post">
            <input class="search-input" name="SearchString" placeholder="Search ..." />
            <button asp-page-handler="search" type="submit" class="search-button">Search</button>
        </form>
    </div>

    <section>
        <br></br>
        <div>
            <a asp-page="Create" class="btn btn-primary">Create a User</a>
        </div>
        
        <div class="container-fluid pt-4 px-4">
            <div class="row g-4">
                <div class="container-fluid pt-4 px-4">
                    <div class="row g-4">
                        <div class="col-sm-12 col-xl-12">
                            <div class="bg-light rounded h-100 p-4">
                                <h6 class="mb-4">User List</h6>
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th scope="col">
                                                @Html.DisplayNameFor(model => model.User[0].UserName)
                                            </th>
                                            <th scope="col">
                                                @Html.DisplayNameFor(model => model.User[0].UserPassword)
                                            </th>
                                            <th scope="col">
                                                @Html.DisplayNameFor(model => model.User[0].Email)
                                            </th>
                                            <th scope="col">
                                                @Html.DisplayNameFor(model => model.User[0].DoB)
                                            </th>
                                            <th scope="col">
                                                @Html.DisplayNameFor(model => model.User[0].Status)
                                            </th>
                                            <th scope="col">
                                                @Html.DisplayNameFor(model => model.User[0].Role)
                                            </th>
                                            <th scope="col">
                                                Action
                                            </th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.User)
                                        {
                                            <tr>
                                                <th scope="row">
                                                    @Html.DisplayFor(modelItem => item.UserName)
                                                </th>
                                                <td>
                                                    <div class="password-container">
                                                        <input type="password" value="@item.UserPassword" class="password-field" readonly />
                                                        <button type="button" class="toggle-password-btn">Show</button>
                                                    </div>
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Email)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.DoB)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Status)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Role.RoleName)
                                                </td>
                                                <td>
                                                    <div class="action-buttons">
                                                        <a asp-page="./Edit" class="btn btn-primary btn-sm" asp-route-id="@item.UserId">Edit</a>
                                                        <a asp-page="./Details" class="btn btn-info btn-sm" asp-route-id="@item.UserId">Details</a>
                                                        <a asp-page="./Delete" class="btn btn-danger btn-sm" asp-route-id="@item.UserId">Delete</a>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <paging class="pagination"
                    total-records="@Model.totalUser"
                    show-total-pages="false"
                    show-total-records="false"
                    page-size="@Model.pageSize"
                    page-no="@Model.pageNo">
            </paging>
        </div>
    </section>





    @* <section style="padding: 1cm 0">
        <p style="text-align: left; margin-top: 20px;">
            <a asp-page="Create" style="text-decoration: none; background-color: darkgray; color: #ffffff; padding: 12px 24px; border-radius: 6px; font-weight: bold; transition: background-color 0.3s;">Create a user</a>
        </p>
        <div class="row">
            <div class="table-container">
            <div class="col-md-30">

                <table class="table table-bordered table-gray table-hover">
                    <thead>
                        <tr>
                            <th style="color: pink; border: solid gainsboro">
                                @Html.DisplayNameFor(model => model.User[0].UserName)
                            </th>
                            <th style="color: pink; border: solid gainsboro">
                                @Html.DisplayNameFor(model => model.User[0].UserPassword)
                            </th>
                            <th style="color: pink; border: solid gainsboro">
                                @Html.DisplayNameFor(model => model.User[0].Email)
                            </th>
                            <th style="color: pink; border: solid gainsboro">
                                @Html.DisplayNameFor(model => model.User[0].Phone)
                            </th>
                            <th style="color: pink; border: solid gainsboro">
                                @Html.DisplayNameFor(model => model.User[0].Address)
                            </th>
                            <th style="color: pink; border: solid gainsboro">
                                @Html.DisplayNameFor(model => model.User[0].UserImg)
                            </th>
                            <th style="color: pink; border: solid gainsboro">
                                @Html.DisplayNameFor(model => model.User[0].DoB)
                            </th>
                            <th style="color: pink; border: solid gainsboro">
                                @Html.DisplayNameFor(model => model.User[0].Status)
                            </th>
                            <th style="color: pink; border: solid gainsboro">
                                @Html.DisplayNameFor(model => model.User[0].Gender)
                            </th>
                            <th style="color: pink; border: solid gainsboro">
                                @Html.DisplayNameFor(model => model.User[0].Role)
                            </th>
                            <th style="color: pink; border: solid gainsboro">
                                Action
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.User)
                        {
                            <tr>
                                <td style="border: solid gainsboro">
                                    @Html.DisplayFor(modelItem => item.UserName)
                                </td>
                                    <td style="border: solid gainsboro">
                                        <div class="password-container">
                                            <input type="password" value="@item.UserPassword" class="password-field" readonly />
                                            <button type="button" class="toggle-password-btn">Show</button>
                                        </div>
                                    </td>
                                <td style="border: solid gainsboro">
                                    @Html.DisplayFor(modelItem => item.Email)
                                </td>
                                <td style="border: solid gainsboro">
                                    @Html.DisplayFor(modelItem => item.Phone)
                                </td>
                                <td style="border: solid gainsboro">
                                    @Html.DisplayFor(modelItem => item.Address)
                                </td>
                                <td style="border: solid gainsboro">
                                    <img src="~/@item.UserImg" alt="User Image" style="max-width: 100px; max-height: 100px;" />
                                </td>
                                <td style="border: solid gainsboro">
                                    @Html.DisplayFor(modelItem => item.DoB)
                                </td>
                                <td style="border: solid gainsboro">
                                    @Html.DisplayFor(modelItem => item.Status)
                                </td>
                                <td style="border: solid gainsboro">
                                    @Html.DisplayFor(modelItem => item.Gender)
                                </td>
                                <td style="border: solid gainsboro">
                                    @Html.DisplayFor(modelItem => item.Role.RoleName)
                                </td>
                                <td style="border: solid gainsboro; padding: 10px;">

                                    <style>
                                        .action-buttons {
                                            display: flex;
                                            flex-direction: column;
                                            gap: 10px;
                                            margin-top: 10px;
                                        }

                                            .action-buttons a {
                                                padding: 10px 15px;
                                                background-color: pink;
                                                color: white;
                                                border: none;
                                                border-radius: 5px;
                                                cursor: pointer;
                                                transition: background-color 0.3s;
                                            }

                                                .action-buttons a:hover {
                                                    background-color: deeppink;
                                                }
                                    </style>

                                    <div class="action-buttons">
                                        <a asp-page="./Edit" asp-route-id="@item.UserId">Edit</a>
                                        <a asp-page="./Details" asp-route-id="@item.UserId">Details</a>
                                        <a asp-page="./Delete" asp-route-id="@item.UserId">Delete</a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            </div>
        </div>
    </section>

    <script src="~/table-07/js/jquery.min.js"></script>
    <script src="~/table-07/js/popper.js"></script>
    <script src="~/table-07/js/bootstrap.min.js"></script>
    <script src="~/table-07/js/main.js"></script>*@
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var togglePasswordBtns = document.querySelectorAll('.toggle-password-btn');

            togglePasswordBtns.forEach(function (btn) {
                btn.addEventListener('click', function () {
                    var passwordField = btn.previousElementSibling;

                    if (passwordField.type === 'password') {
                        passwordField.type = 'text';
                        btn.textContent = 'Hide';
                    } else {
                        passwordField.type = 'password';
                        btn.textContent = 'Show';
                    }
                });
            });
        });
    </script> 

</body>

</html>



@* <h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.User[0].UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].UserPassword)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].UserImg)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].DoB)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].Role)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.User) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserPassword)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserImg)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DoB)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Gender)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Role.RoleId)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.UserId">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.UserId">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.UserId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
 *@